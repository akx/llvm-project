; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --function-signature --check-globals
; RUN: opt -S -mtriple=amdgcn-unknown-unknown -passes=amdgpu-attributor %s -o - | FileCheck %s

@g1 = protected addrspace(1) externally_initialized global i32 0, align 4
@g2 = protected addrspace(1) externally_initialized global i32 0, align 4

;.
; CHECK: @g1 = protected addrspace(1) externally_initialized global i32 0, align 4
; CHECK: @g2 = protected addrspace(1) externally_initialized global i32 0, align 4
;.
define internal fastcc void @f(ptr %x, ptr %y) {
; CHECK-LABEL: define {{[^@]+}}@f
; CHECK-SAME: (ptr inreg [[X:%.*]], ptr inreg [[Y:%.*]]) #[[ATTR0:[0-9]+]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[X_VAL:%.*]] = load i32, ptr [[X]], align 4
; CHECK-NEXT:    store i32 [[X_VAL]], ptr addrspace(1) @g1, align 4
; CHECK-NEXT:    [[LOAD:%.*]] = load i32, ptr [[Y]], align 4
; CHECK-NEXT:    store i32 [[LOAD]], ptr addrspace(1) @g2, align 4
; CHECK-NEXT:    ret void
;
entry:
  %x.val = load i32, ptr %x, align 4
  store i32 %x.val, ptr addrspace(1) @g1, align 4
  %load = load i32, ptr %y, align 4
  store i32 %load, ptr addrspace(1) @g2, align 4
  ret void
}

define protected amdgpu_kernel void @kernel(ptr addrspace(1) %x2, i32 %z) {
; CHECK-LABEL: define {{[^@]+}}@kernel
; CHECK-SAME: (ptr addrspace(1) [[X2:%.*]], i32 [[Z:%.*]]) #[[ATTR1:[0-9]+]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[X2_CAST:%.*]] = addrspacecast ptr addrspace(1) [[X2]] to ptr
; CHECK-NEXT:    [[QUEUE_PTR:%.*]] = tail call ptr addrspace(4) @llvm.amdgcn.queue.ptr()
; CHECK-NEXT:    [[QUEUE_PTR_CAST:%.*]] = addrspacecast ptr addrspace(4) [[QUEUE_PTR]] to ptr
; CHECK-NEXT:    [[IMPLICITARG_PTR:%.*]] = tail call ptr addrspace(4) @llvm.amdgcn.implicitarg.ptr()
; CHECK-NEXT:    [[IMPLICITARG_PTR_CAST:%.*]] = addrspacecast ptr addrspace(4) [[IMPLICITARG_PTR]] to ptr
; CHECK-NEXT:    [[CMP:%.*]] = icmp sgt i32 [[Z]], 0
; CHECK-NEXT:    [[COND:%.*]] = select i1 [[CMP]], ptr [[QUEUE_PTR_CAST]], ptr [[X2_CAST]]
; CHECK-NEXT:    tail call fastcc void @f(ptr [[COND]], ptr noundef [[IMPLICITARG_PTR_CAST]])
; CHECK-NEXT:    [[DOTVAL:%.*]] = load i32, ptr addrspace(4) [[QUEUE_PTR]], align 4
; CHECK-NEXT:    tail call fastcc void @f(ptr [[COND]], ptr noundef [[IMPLICITARG_PTR_CAST]])
; CHECK-NEXT:    ret void
;
entry:
  %x2.cast = addrspacecast ptr addrspace(1) %x2 to ptr
  %queue.ptr = tail call ptr addrspace(4) @llvm.amdgcn.queue.ptr()
  %queue.ptr.cast = addrspacecast ptr addrspace(4) %queue.ptr to ptr
  %implicitarg.ptr = tail call ptr addrspace(4) @llvm.amdgcn.implicitarg.ptr()
  %implicitarg.ptr.cast = addrspacecast ptr addrspace(4) %implicitarg.ptr to ptr
  %cmp = icmp sgt i32 %z, 0
  %cond = select i1 %cmp, ptr %queue.ptr.cast, ptr %x2.cast
  tail call fastcc void @f(ptr %cond, ptr noundef %implicitarg.ptr.cast)
  %.val = load i32, ptr addrspace(4) %queue.ptr, align 4
  tail call fastcc void @f(ptr %cond, ptr noundef %implicitarg.ptr.cast)
  ret void
}

declare align 4 ptr addrspace(4) @llvm.amdgcn.queue.ptr()

declare align 4 ptr addrspace(4) @llvm.amdgcn.implicitarg.ptr()
;.
; CHECK: attributes #[[ATTR0]] = { "amdgpu-no-agpr" "amdgpu-no-completion-action" "amdgpu-no-default-queue" "amdgpu-no-dispatch-id" "amdgpu-no-dispatch-ptr" "amdgpu-no-heap-ptr" "amdgpu-no-hostcall-ptr" "amdgpu-no-implicitarg-ptr" "amdgpu-no-lds-kernel-id" "amdgpu-no-multigrid-sync-arg" "amdgpu-no-queue-ptr" "amdgpu-no-workgroup-id-x" "amdgpu-no-workgroup-id-y" "amdgpu-no-workgroup-id-z" "amdgpu-no-workitem-id-x" "amdgpu-no-workitem-id-y" "amdgpu-no-workitem-id-z" "amdgpu-waves-per-eu"="4,10" "uniform-work-group-size"="false" }
; CHECK: attributes #[[ATTR1]] = { "amdgpu-no-agpr" "amdgpu-no-completion-action" "amdgpu-no-default-queue" "amdgpu-no-dispatch-id" "amdgpu-no-dispatch-ptr" "amdgpu-no-heap-ptr" "amdgpu-no-hostcall-ptr" "amdgpu-no-lds-kernel-id" "amdgpu-no-multigrid-sync-arg" "amdgpu-no-workgroup-id-x" "amdgpu-no-workgroup-id-y" "amdgpu-no-workgroup-id-z" "amdgpu-no-workitem-id-x" "amdgpu-no-workitem-id-y" "amdgpu-no-workitem-id-z" "amdgpu-waves-per-eu"="4,10" "uniform-work-group-size"="false" }
; CHECK: attributes #[[ATTR2:[0-9]+]] = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
;.
